# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pool:
  vmImage: ubuntu-latest

variables:
  EC2_PUBLIC_IP: ''  # Populated dynamically
  SSH_USER: 'ec2-user'  # Default Amazon Linux user
  SSH_PRIVATE_KEY: $(SSH_PRIVATE_KEY)  # Replace with actual variable name

steps:
  # Step 1: Checkout Terraform Scripts from Azure Repos
  - task: Checkout@1
    displayName: "Checkout Terraform Scripts"

  # Step 2: Install Terraform
  - task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@2
    inputs:
     terraformVersion: 'latest'
    
  # Step 3: Initialize Terraform
  - script: |
      terraform init
    displayName: "Terraform Init"

  # Step 4: Plan Terraform
  - script: |
      terraform plan -out=tfplan
    displayName: "Terraform Plan"

  # Step 5: Apply Terraform
  - script: |
      terraform apply -auto-approve tfplan
      echo "##vso[task.setvariable variable=EC2_PUBLIC_IP]$(terraform output -raw ec2_public_ip)"
    displayName: "Terraform Apply"

  # Step 6: Install SSH Key
  - task: InstallSSHKey@0
    inputs:
      sshPublicKey: $(SSH_PRIVATE_KEY)
      hostName: $(EC2_PUBLIC_IP)
      userName: $(SSH_USER)
    displayName: "Install SSH Key"

  # Step 7: SSH into EC2 and Clone GitHub Repositories
  - script: |
      ssh -i $(SSH_PRIVATE_KEY) $(SSH_USER)@$(EC2_PUBLIC_IP) << 'EOF'
      sudo yum update -y
      sudo yum install -y python3 git
      git clone https://github.com/your-user/your-dash-app-repo.git /home/ec2-user/dash_app
      git clone https://github.com/your-user/your-flask-api-repo.git /home/ec2-user/flask_api
      EOF
    displayName: "Clone Dash App and Flask API from GitHub"

  # Step 8: Install Dependencies and Run Applications
  - script: |
      ssh -i $(SSH_PRIVATE_KEY) $(SSH_USER)@$(EC2_PUBLIC_IP) << 'EOF'
      pip3 install -r /home/ec2-user/dash_app/requirements.txt
      pip3 install -r /home/ec2-user/flask_api/requirements.txt
      nohup python3 /home/ec2-user/dash_app/app.py > /home/ec2-user/dash_app.log 2>&1 &
      nohup python3 /home/ec2-user/flask_api/api.py > /home/ec2-user/flask_api.log 2>&1 &
      EOF
    displayName: "Install Dependencies and Start Applications"
