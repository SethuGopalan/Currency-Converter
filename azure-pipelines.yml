# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pool:
  vmImage: ubuntu-latest

variables:
  AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)  # Set this as a secret variable in Azure Pipelines
  AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)  # Set this as a secret variable
  AWS_REGION: "us-east-1"
  SSH_USER: "ec2-user"
  SSH_PRIVATE_KEY: $(SSH_PRIVATE_KEY)

steps:
  # Step 1: Checkout Repository
  - checkout: self
    displayName: "Checkout Repository"

  # Step 2: Debug Working Directory
  - script: |
      echo "Current Working Directory: $(System.DefaultWorkingDirectory)"
      ls -al
      displayName: "Debug Working Directory"

  # Step 3: Initialize Terraform
  - script: |
      terraform init
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform
      displayName: "Terraform Init"

  # Step 4: Plan Terraform
  - script: |
      terraform plan -out=tfplan
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform
      displayName: "Terraform Plan"

  # Step 5: Apply Terraform
  - script: |
      terraform apply -auto-approve tfplan
      EC2_IP=$(terraform output -raw ec2_public_ip)
      echo "##vso[task.setvariable variable=EC2_PUBLIC_IP]$EC2_IP"
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform
      displayName: "Terraform Apply"

  # Step 6: Verify EC2 Public IP
  - script: |
      echo "EC2 Public IP: $(EC2_PUBLIC_IP)"
      displayName: "Display EC2 Public IP"


  # Step 6: Install SSH Key
  - script: |
      mkdir -p ~/.ssh
      echo "$(SSH_PRIVATE_KEY)" > ~/.ssh/id_rsa
      chmod 600 ~/.ssh/id_rsa
      ssh -o StrictHostKeyChecking=no $(SSH_USER)@$(EC2_PUBLIC_IP) "echo Connection successful"
    displayName: "Manually Configure SSH Key"

  # Step 7: SSH into EC2 and Clone GitHub Repositories
  - script: |
      ssh -o StrictHostKeyChecking=no -i $(SSH_PRIVATE_KEY) $(SSH_USER)@$(EC2_PUBLIC_IP) << 'EOF'
      sudo yum update -y
      sudo yum install -y python3 git
      git clone https://github.com/your-user/your-dash-app-repo.git /home/ec2-user/dash_app
      git clone https://github.com/your-user/your-flask-api-repo.git /home/ec2-user/flask_api
      EOF
    displayName: "Clone Dash App and Flask API from GitHub"

  # Step 8: Install Dependencies and Run Applications
  - script: |
      ssh -o StrictHostKeyChecking=no -i $(SSH_PRIVATE_KEY) $(SSH_USER)@$(EC2_PUBLIC_IP) << 'EOF'
      pip3 install -r /home/ec2-user/dash_app/requirements.txt
      pip3 install -r /home/ec2-user/flask_api/requirements.txt
      nohup python3 /home/ec2-user/dash_app/app.py > /home/ec2-user/dash_app.log 2>&1 &
      nohup python3 /home/ec2-user/flask_api/api.py > /home/ec2-user/flask_api.log 2>&1 &
      EOF
    displayName: "Install Dependencies and Start Applications"